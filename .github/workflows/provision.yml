name: Terraform CI/CD

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TF_VAR_fingerprint: ${{ secrets.FINGERPRINT }}
  TF_VAR_private_key_path: "~/oci_api_key.pem"
  TF_VAR_region: ${{ secrets.REGION }}
  TF_VAR_tenancy_ocid: ${{ secrets.TENANCY_OCID }}
  TF_VAR_user_ocid: ${{ secrets.USER_OCID }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Create OCI Private Key File
        run: echo "${{ secrets.PRIVATE_KEY }}" > ${{ env.TF_VAR_private_key_path }} && chmod 600 ${{ env.TF_VAR_private_key_path }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -detailed-exitcode
        continue-on-error: true

      - name: Post Plan to PR
        uses: actions/github-script@v7
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“– ####
            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

  apply:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    environment:
      name: main
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Create OCI Private Key File
        run: echo "${{ secrets.PRIVATE_KEY }}" > ${{ env.TF_VAR_private_key_path }} && chmod 600 ${{ env.TF_VAR_private_key_path }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
